{"version":3,"sources":["api/index.js","auth/index.js","components/Header.js","components/Footer.js","components/Routines.js","components/Activities.js","components/Loading.js","components/Forms.js","components/MyRoutines.js","components/SingleUser.js","index.js"],"names":["BASE","getRoutines","a","fetch","data","json","jsonData","getUser","token","headers","response","routineId","method","console","error","addActivity","activityId","count","duration","body","JSON","stringify","editRoutineActivity","routineActivityId","getUserRoutines","username","storeCurrentUser","user","localStorage","setItem","storeCurrentToken","Header","props","useState","loggingIn","setLoggingIn","errorMessage","setErrorMessage","setToken","setCurrentUsername","LogInForm","currentUsername","setUsername","password","setPassword","handleSubmit","event","preventDefault","message","className","onSubmit","type","placeholder","value","name","onChange","target","NewAccount","newUsername","setNewUsername","newPassword","setNewPassword","newUser","onClick","removeItem","style","display","Footer","padding","paddingBottom","Routines","publicRoutines","routinesList","filter","routine","isPublic","textAlign","paddingTop","map","goal","color","to","creatorName","activities","activity","description","id","Activities","activitiesList","setActivities","setName","setDescription","newActivitiesList","backgroundColor","Loading","NewActivity","setActivityId","setActivityName","setDescriptionName","routineActivityErrorMessage","setRoutineActivityErrorMessage","setCount","setDuration","routineIdtoAddActivity","setHadAChange","find","min","MyRoutines","setRoutines","usernameRoutineList","setUsernameRoutineList","hadAChange","setGoal","setIsPublic","editName","setEditName","editGoal","setEditGoal","editId","setEditId","isEditing","setIsEditing","isEditingRA","setIsEditingRA","setRoutineIdtoAddActivity","routineError","setRoutineError","editRoutineActivityDuration","setEditRoutineActivityDuration","editRoutineActivityCount","setEditRoutineActivityCount","editRoutineActivityId","setEditRoutineActivityId","editIsPublic","setEditIsPublic","nameOfRoutineActivityEdit","setNameOfRoutineActivityEdit","useEffect","then","routines","catch","handleEditSubmit","handleEditRoutineActivitySubmit","log","width","alignSelf","length","userRoutine","border","borderRadius","RoutineActivityId","deleteRoutineActivity","newList","newUserList","index","findIndex","splice","index2","deleteRoutine","useParams","filteredUser","alignItems","flexDirection","justifyContent","flexWrap","App","loading","setLoading","parse","getItem","getActivities","finally","textDecoration","activeClassName","path","exact","SingleUser","src","alt","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c88cbe4e.chunk.js","sourcesContent":["const BASE = `https://infinite-thicket-81951.herokuapp.com/api`\n\nexport async function getRoutines() {\n    try {\n      const data  = await fetch(`${ BASE }/routines`);\n      const jsonData = await data.json()\n      return jsonData\n    } catch (error) {\n      throw error;\n    }\n};\n\nexport async function getActivities() {\n    try {\n      const data  = await fetch(`${ BASE }/activities`);\n      const jsonData = await data.json()\n      return jsonData\n    } catch (error) {\n      throw error;\n    }\n};\n\nexport async function getUser(token) {\n  try { \n    const data = await fetch(`${ BASE }/users/me`, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer' + \" \" + token\n      },\n    })\n    const response = await data.json()\n    if (!token) {\n      return\n    } else {\n      return response\n    }\n  } catch(error) {\n    throw error;\n  }\n};\n\nexport async function deleteRoutine(routineId, token) {\n  try {\n    const data = await fetch(`${ BASE }/routines/${routineId}`, {\n      method: \"DELETE\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n        }\n      })\n      const response = await data.json()\n      return response\n  } catch (error) {\n    console.error(error)\n  }\n};\n\nexport async function addActivity(routineId, token, activityId, count, duration) {\n  try { \n    const response = await fetch(`${ BASE }/routines/${routineId}/activities`, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n      },\n    body: JSON.stringify({\n          activityId,\n          count,\n          duration\n      })\n    })\n    const data = await response.json()\n    return data\n  } catch (error) {\n    console.error(error)\n  }\n};\n\nexport async function editRoutineActivity(routineActivityId, token, count, duration) {\n  try { \n    const response = await fetch(`${ BASE }/routine_activities/${routineActivityId}`, {\n    method: \"PATCH\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n      },\n    body: JSON.stringify({\n          count,\n          duration\n      })\n    })\n    const data = await response.json()\n    return data\n  } catch (error) {\n    console.error(error)\n  }\n};\n\nexport async function deleteRoutineActivity(routineActivityId, token) {\n  try {\n    const data = await fetch(`${ BASE }/routine_activities/${routineActivityId}`, {\n      method: \"DELETE\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n        }\n      })\n      const response = await data.json()\n      return response\n  } catch (error) {\n    console.error(error)\n  }\n};\n\nexport async function getUserRoutines(username) {\n  try {\n    const data  = await fetch(`${ BASE }/users/${username}/routines`);\n    const jsonData = await data.json()\n    return jsonData\n  } catch (error) {\n    throw error;\n  }\n};","export function storeCurrentUser(user) {\n  localStorage.setItem('currentUser', JSON.stringify(user));\n};\n  \nexport function getCurrentUser() {\n  const user = JSON.parse(localStorage.getItem('currentUser'));\n  return user;\n};\n  \nexport function clearCurrentUser() {\n  localStorage.removeItem('currentUser');\n};\n\nexport function storeCurrentToken(token) {\n  localStorage.setItem('token', JSON.stringify(token));\n};\n\nexport function getCurrentToken() {\n  const getToken = JSON.parse(localStorage.getItem('token'));\n  return getToken;\n};\n\nexport function clearCurrentToken() {\n  localStorage.removeItem('token');\n};","import React, {useState} from 'react';\nimport './Header.css';\nimport { getUser } from '../api'\n\nimport {\n    storeCurrentUser,\n    clearCurrentUser,\n    storeCurrentToken,\n    clearCurrentToken\n} from '../auth';\n  \n\nconst BASE = 'https://infinite-thicket-81951.herokuapp.com/api'\n\nconst Header = (props) => {\n    const [loggingIn, setLoggingIn] = useState(true)\n    const [errorMessage, setErrorMessage] = useState('')\n    const {token, setToken, setCurrentUsername, currentUsername} = props\n\n    const LogInForm = () => {\n        const [username, setUsername] = useState('')\n        const [password, setPassword] = useState('')\n        \n        const handleSubmit = async (event) => {\n            event.preventDefault();\n            try {    \n                const response = await fetch(`${BASE}/users/login`, {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ \n                  username: `${username}`, password: `${password}`\n                })\n                });\n                const data = await response.json()\n                if (data.error) {\n                    setErrorMessage(data.message) || setErrorMessage(data.error + '. No matching Username and Password found.')\n                } else {\n                    setErrorMessage('')\n                }      \n                if (data.token) {\n                    await setCurrentUsername(data.user.username)   \n                    await setToken(data.token)        \n                    await storeCurrentUser(data.user.username)\n                    await storeCurrentToken(data.token)\n                    await getUser(data.token)\n                }      \n            } catch(error) {\n                console.error(error)\n            }\n        };\n      \n        return (\n            <div className='forms'>\n                <h2 className=\"formTitle\">Log In</h2>\n                <form onSubmit={handleSubmit}>\n                    <input type=\"text\" placeholder=\"Username\" value={ username }\n                    name=\"username\"\n                    onChange={(event) => { setUsername(event.target.value) }}/>\n                    <input type=\"text\" placeholder=\"Password\" value={ password }\n                    name=\"password\"\n                    onChange={(event) => { setPassword(event.target.value) }}/>\n                    <button type=\"submit\" className='submitSign'>Log In</button>\n                </form>\n            </div>\n        )\n    };\n\n    const NewAccount = () => {\n        const [newUsername, setNewUsername] = useState('')\n        const [newPassword, setNewPassword] = useState('')\n\n        const handleSubmit = async (event) => {\n            event.preventDefault();\n            try {    \n                const response = await fetch(`${BASE}/users/register`, {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    username: `${newUsername}`,\n                    password: `${newPassword}`\n                })\n                });\n                const data = await response.json()\n                if (data.error) {\n                    setErrorMessage(data.message)\n                    return\n                } else {\n                    setErrorMessage('')\n                }\n                const newUser = await getUser(data.token)\n                await storeCurrentUser(data.user.username)\n                await storeCurrentToken(data.token)\n                if (!data.error && data.token && newUser) {\n                    await setToken(data.token)    \n                    await setCurrentUsername(newUser.username)\n                }\n            } catch(error) {\n              console.error(error)\n            }\n        };\n\n        return (\n            <div className='forms'>\n                <h2 className=\"formTitle\">New Account</h2>\n                <form onSubmit={handleSubmit}>\n                    <input type=\"text\" placeholder=\"Username\" value={ newUsername }\n                        name=\"newusername\"\n                        onChange={(event) => { setNewUsername(event.target.value) }}/>\n                    <input type=\"text\" placeholder=\"Password\" value={ newPassword }\n                        name=\"newpassword\"\n                        onChange={(event) => { setNewPassword(event.target.value) }}/>\n                    <button type=\"submit\" className='submitSign'>Create New Account</button>\n                </form>\n            </div>\n        )\n    };\n        \n    return (\n        <header>\n        <h1 className='mainHeader'>Fitness Tracker</h1>\n        <section className=\"toggleSignIn\">\n        {\n            token ? \n            <button className=\"signOut\"\n                onClick={() => {setToken('') \n                    setCurrentUsername('')\n                    clearCurrentUser();\n                    clearCurrentToken();\n                    }}>Sign Out</button>\n            :\n            <button className=\"toggleButton\"\n                onClick={() => setLoggingIn(!loggingIn)}>{loggingIn ? 'New User? Create Account' : 'Already have an Account? Log In'}</button>\n        }\n        { errorMessage ? <p className=\"errorMessage\">{errorMessage}</p> : '' }\n        <div className=\"signInForms\" style={{display: token? \"none\" : \"block\"}}>\n        { loggingIn ? <LogInForm /> : <NewAccount /> }\n        </div>\n        </section>\n        </header>\n    )\n};\n\nexport default Header;","import React from 'react';\nimport './Footer.css'\n\nconst Footer = () => {\n    return (\n        <div className='footer'>\n            <p style={{padding: \"5px\", paddingBottom: \"7px\"}}>&copy; 2020 Fitness Tracker</p>\n        </div>\n    )\n}\n\nexport default Footer;","import React from 'react'\nimport {Link} from 'react-router-dom';\nimport './Routines.css'\n\nconst Routines = ({routinesList}) => {\n    const publicRoutines = routinesList.filter(routine => routine.isPublic === true )\n\n    return (\n        <>\n        <main>\n        <h1 style={{textAlign: \"center\", paddingTop: \"10px\"}}>Routines</h1>    \n        <div className=\"routinesSection\">     \n        {\n            publicRoutines.map((routine)  => \n                <div key={routine.id} className='routineItem'>\n                <section>\n                <h3>{routine.name}</h3>\n                <p><b>Goal:</b>{routine.goal}</p>\n                <p><b>Creator:</b><Link style={{padding: \"3px\", color: \"#2155a3\"}} to={`/users/${routine.creatorName}/routines`}>{routine.creatorName}</Link></p>\n                </section>\n            { routine.activities ? \n                <section className=\"actList\">\n                <p>Activities:</p>\n                    {routine.activities.map((activity) => \n                    <div key={activity.id} className=\"eachActivity\">\n                    <p>Name: {activity.name}</p>\n                    <p>Description: {activity.description}</p>\n                    <p>Duration: {activity.duration}</p>\n                    <p>Count: {activity.count}</p>\n                    </div>\n                    )\n                    }\n                </section>\n                : ''\n            }     \n                </div>\n            )\n        }   \n        </div>\n        </main>\n        </>\n    )\n}\n\nexport default Routines;","import React, {useState} from 'react';\nimport './Activities.css';\n\nconst Activities = (props) => {\n    const {activitiesList, setActivities, token} = props\n    const [name, setName] = useState('')\n    const [description, setDescription] = useState('')\n    const [errorMessage, setErrorMessage] = useState('')\n\n    const handleSubmit = async (event) => {\n        event.preventDefault()\n        try {\n            const response = await fetch('https://infinite-thicket-81951.herokuapp.com/api/activities', {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                    },\n                body: JSON.stringify({\n                name: `${name}`,\n                description: `${description}`\n                })\n            })\n            const data = await response.json()\n            if (data.error) {\n                setErrorMessage('Sorry, your ACTIVITY was not added due to duplicate activity')\n                    return\n            } else {\n                setErrorMessage('')\n            }\n            const newActivitiesList = [...activitiesList, data]\n            setActivities(newActivitiesList)\n            setName('')\n            setDescription('')\n        } catch (error) {\n          console.error(error)\n        }\n    }\n\n    return (\n        <div className=\"newActivity\">\n        <h1 style={{textAlign: \"center\"}}>Activities</h1>\n        { token ? \n            <form className='newActivityForm' onSubmit={handleSubmit}>\n                <h2>Create a New Activity</h2>\n                { errorMessage ? \n                    <p style={{color: \"red\", backgroundColor: \"white\"}}>{errorMessage} </p> : ''\n                }\n                <input type=\"text\" placeholder=\"name\" \n                    value={ name }\n                    onChange={(event) => {\n                    setName(event.target.value)\n                }}/>\n                <input type=\"text\" placeholder=\"description\" \n                    value={ description }\n                    onChange={(event) => {\n                    setDescription(event.target.value)\n                }}/>\n                <button type=\"submit\">Add Activity</button>\n            </form>\n        : ''\n        }\n            <div className=\"activitiesSection\">\n            {\n                activitiesList.map((activity)  => \n                <div key={activity.id} className='activityItem'>\n                <h3>{activity.name}</h3>\n                <p><b>Description:</b>{activity.description}</p>\n                </div>\n                )\n            }   \n            </div>\n        </div>\n    )\n};\n\nexport default Activities;","import React from 'react';\n\nconst Loading = () => {\n    return (\n        <div id=\"loading\">\n        <h2 className=\"message\" style={{ padding: \".5em\"}}>Thinking...</h2>\n        </div>\n    )\n}\n\nexport default Loading;","import React, {useState} from 'react';\nimport './Header.css'\nimport {addActivity} from '../api'\n\nconst NewActivity = (props) => {\n  const [ activityId, setActivityId] = useState(1)\n  const [ activityName, setActivityName] = useState('')\n  const [ descriptionName, setDescriptionName] = useState('')\n  const [ routineActivityErrorMessage, setRoutineActivityErrorMessage] = useState('')\n  const [ count, setCount] = useState(0)\n  const [ duration, setDuration] = useState(0)\n\n  const {activitiesList, routineIdtoAddActivity, token, setHadAChange} = props\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    const newActivityRoutine = await addActivity(routineIdtoAddActivity, token, activityId, count, duration)\n    if (newActivityRoutine.error) {\n      setRoutineActivityErrorMessage('This is a duplicate ROUTINE ACTIVITY. Please delete one of the same ACTIVITIES.')\n    } else {\n      setRoutineActivityErrorMessage('') \n    }\n    setHadAChange(true)\n    setCount(0)\n    setDuration(0)\n    setActivityId(0)\n  };\n\n  const handleSelectChange = (event) => {\n    const id = event.target.value;\n    const activity = activitiesList.find(activity => activity.id == id);\n    setActivityId(activity.id);\n    setActivityName(activity.name)\n    setDescriptionName(activity.description)\n  };\n\n  return (\n    <div className='activityForm'>\n      <h4 className=\"activityFormTitle\">Add an Activity</h4>\n        <form onSubmit={ handleSubmit }>\n          <p>(Select from drop down)</p>\n          <select onChange={ handleSelectChange } className=\"option\">       \n            {\n              activitiesList.map(activity => (\n                <option key={ activity.id } value={ activity.id }>\n                { activity.name}</option>\n              ))\n            }\n          </select>\n          <label>Duration:</label>   \n          <input className=\"numberInput\" type=\"number\" min=\"0\" value={ duration } name=\"duration\"\n              onChange={(event) => { setDuration(event.target.value) }}/>\n          <label>Count:</label>    \n          <input className=\"numberInput\" type=\"number\" min=\"0\" value={ count } name=\"count\"\n              onChange={(event) => { setCount(event.target.value) }}/>\n          <button type=\"submit\" className='submitButton'>Add Activity</button>\n            {\n              routineActivityErrorMessage ? \n              <p style={{color: \"red\", backgroundColor: \"white\"}}>{routineActivityErrorMessage} </p> : ''\n            }    \n        </form>\n    </div>\n  )\n};\n\nexport default NewActivity;","import React, {useEffect, useState} from 'react';\nimport './MyRoutines.css'\n\nimport { deleteRoutine, deleteRoutineActivity, getUserRoutines,\n         editRoutineActivity } from '../api';\n\nimport NewActivity from './Forms'\n\nconst MyRoutines = (props) => {\n    const { currentUsername, routinesList, setRoutines, token, \n            usernameRoutineList, setUsernameRoutineList, activitiesList,\n            hadAChange, setHadAChange } = props\n    \n    const [ name, setName ] = useState('')\n    const [ goal, setGoal ] = useState('')\n    const [ isPublic, setIsPublic ] = useState(true)  \n    const [ editName, setEditName ] = useState('')\n    const [ editGoal, setEditGoal ] = useState('')\n    const [ editId, setEditId ] = useState(1)\n    const [ isEditing, setIsEditing ] = useState(false)\n    const [ isEditingRA, setIsEditingRA ] = useState(false)\n    const [ routineIdtoAddActivity, setRoutineIdtoAddActivity ] = useState(1)\n    const [ routineError, setRoutineError ] = useState('')\n    const [ editRoutineActivityDuration, setEditRoutineActivityDuration ] = useState(0)\n    const [ editRoutineActivityCount, setEditRoutineActivityCount ] = useState(0)\n    const [ editRoutineActivityId, setEditRoutineActivityId ] = useState(0)\n    const [ editIsPublic, setEditIsPublic ] = useState(true)\n    const [ nameOfRoutineActivityEdit, setNameOfRoutineActivityEdit ] = useState('')\n\n    useEffect(() => {\n        getUserRoutines(currentUsername)\n       .then(routines => {\n        setUsernameRoutineList(routines)\n       })\n       .catch(error => {\n           console.error(error)\n       });\n    }, []);\n\n    useEffect(() => {\n        getUserRoutines(currentUsername)\n        .then(routines => {\n        setUsernameRoutineList(routines)\n        setHadAChange(false)\n        })\n        .catch(error => {\n            console.error(error)\n        });\n    }, [hadAChange]);\n    \n    const handleSubmit = async (event) => {\n        event.preventDefault()\n        try {\n            const response = await fetch('https://infinite-thicket-81951.herokuapp.com/api/routines', {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                    },\n                body: JSON.stringify({\n                    name: `${name}`,\n                    goal: `${goal}`,\n                    isPublic: `${isPublic}`\n                    })\n                })\n                const data = await response.json()\n                if (data.error) {\n                    setRoutineError('Sorry, your Routine was not added due to duplicate routine')\n                    return\n                } else {\n                    setRoutineError('')\n                }\n                setHadAChange(true)\n                setName('')\n                setGoal('')\n                setIsPublic(true)\n        } catch (error) {\n          console.error(error)\n        }\n    };\n\n    const handleEditSubmit = async (event) => {\n        event.preventDefault()\n        try {\n            const response = await fetch(`https://infinite-thicket-81951.herokuapp.com/api/routines/${editId}`, {\n                method: \"PATCH\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                    },\n                body: JSON.stringify({\n                name: `${editName}`,\n                goal: `${editGoal}`,\n                isPublic: `${editIsPublic}`\n                })\n            })\n            await response.json()\n            setHadAChange(true)\n        } catch (error) {\n          console.error(error)\n        }\n    };\n\n    const handleEditRoutineActivitySubmit = async (event) => {\n        event.preventDefault()\n        try {\n            const editData = await editRoutineActivity(editRoutineActivityId, token, editRoutineActivityCount, editRoutineActivityDuration)\n            setHadAChange(true)\n            setEditRoutineActivityId(0)\n            setEditRoutineActivityCount(0)\n            setEditRoutineActivityDuration(0)\n        } catch (error) {\n          console.log(error)\n        }\n    };\n\n    return (\n        <>\n        <div className=\"myRoutinesSection\">\n            <h1>My Routines</h1>\n            <form className='myRoutineForm' onSubmit={handleSubmit}>\n                <h2>Create a New Routine</h2>\n                { routineError ? \n                    <p style={{color: \"red\", backgroundColor: \"white\"}}>{routineError} </p> : ''\n                }\n                <label>Name</label>\n                <input type=\"text\" placeholder=\"name\" value={ name } \n                    onChange={(event) => {\n                    setName(event.target.value)\n                    }}/>\n                <label>Goal</label>    \n                <input type=\"text\" placeholder=\"goal\" value={ goal }\n                    onChange={(event) => {\n                    setGoal(event.target.value)}}/>\n                <label>Is Public?</label>\n                <select value={ isPublic } style={{width: \"50px\", alignSelf: \"center\"}}\n                onChange={(event) => {setIsPublic(event.target.value)}}\n                name=\"isPublic\">\n                <option value={true}>Yes</option>\n                <option value={false}>No</option>\n                </select>\n                <button>Add Routine</button>\n                </form>\n\n            <h2>Hi {currentUsername}</h2> \n            <div className=\"routineMain\">\n            {   \n                usernameRoutineList && usernameRoutineList.length > 0 &&  \n                usernameRoutineList.map((userRoutine) => \n                <div key={userRoutine.id} style={{border: \"3px solid rgb(133, 148, 161)\", \n                borderRadius: \"5px\", width: \"250px\", padding: \"10px\"}} className=\"routineCard\">\n                <section>\n                <h3>{userRoutine.name}</h3>\n                <p><span className=\"myRoutineInfo\">Goal:</span>{userRoutine.goal}</p>\n                <p><span className=\"myRoutineInfo\">Creator:</span>{userRoutine.creatorName}</p>   \n                <p className=\"isPublic\"><span className=\"myRoutineInfo\">Is Public:</span>{ userRoutine.isPublic ? 'Yes' : 'No' }</p>      \n                </section>\n\n                { userRoutine.activities ? \n                    <>\n                    <section className=\"actList\">\n                    <p>Activities:</p>\n                    {   userRoutine.activities.map((activity) => \n                        <div key={activity.RoutineActivityId} className=\"eachActivity\">\n                        <p>Name: {activity.name}</p>\n                        <p>Description: {activity.description}</p>\n                        <p>Duration: {activity.duration}</p>\n                        <p>Count: {activity.count}</p>\n                        <button className=\"editRoutineActivity\"\n                            onClick={() => {\n                            setIsEditingRA(true)\n                            setEditRoutineActivityId(activity.RoutineActivityId)\n                            setEditRoutineActivityCount(activity.count)\n                            setEditRoutineActivityDuration(activity.duration)\n                            setNameOfRoutineActivityEdit(activity.name) }}>Edit</button>\n                        <button className=\"delete\"\n                            onClick={() => {\n                            setHadAChange(true)\n                            deleteRoutineActivity(activity.RoutineActivityId, token) }}>Delete</button>\n                        </div>\n                        )\n                    }\n                    </section>\n                    </>\n                    : ''\n                }     \n\n                <button className=\"edit\" onClick={() => {\n                setIsEditing(true)\n                setEditName(userRoutine.name)\n                setEditGoal(userRoutine.goal)\n                setEditId(userRoutine.id)}}>Edit</button>\n\n                <button className=\"delete\" onClick={(event) => {\n                const newList = [...routinesList]\n                const newUserList = [...usernameRoutineList]\n                const index = newList.findIndex(routine => routine.id === userRoutine.id);\n                if (index === -1) return;\n                newList.splice(index, 1);\n                setRoutines(newList)\n                const index2 = newUserList.findIndex(routine  => routine.id === userRoutine.id);\n                if (index2 === -1) return;\n                newUserList.splice(index2, 1);\n                setUsernameRoutineList(newUserList)\n                deleteRoutine(userRoutine.id, token)}}>Delete</button>\n\n                <>\n                <div onClick={(event) => {setRoutineIdtoAddActivity(userRoutine.id)}}>\n                <NewActivity activitiesList={activitiesList} routineIdtoAddActivity={routineIdtoAddActivity}\n                    token={token} hadAChange={hadAChange} setHadAChange={setHadAChange} />\n                </div>\n                </>\n            </div>\n            )}\n        </div>\n       \n        <form className='routineEditForm' style={{ display: isEditing? 'block' : 'none' }}\n            onSubmit={handleEditSubmit}>\n            <h2 className=\"nameHeading\"><span>Edit Routine</span> \n            <span className=\"close\" onClick={() => setIsEditing(false)}>X CLOSE</span> \n            </h2>\n            <label >Name</label>\n            <input type=\"text\" placeholder=\"name\" value={ editName } onChange={(event) => { setEditName(event.target.value) }}/>\n            <label>Goal</label>\n            <input type=\"textarea\" placeholder=\"goal\" value={ editGoal } onChange={(event) => {setEditGoal(event.target.value)}}/>\n            <label>Is Public?</label>\n            <select value={ editIsPublic } style={{width: \"50px\", alignSelf: \"center\"}}\n                onChange={(event) => {setEditIsPublic(event.target.value)}} name=\"isPublic\">\n                <option value={true}>Yes</option>\n                <option value={false}>No</option>\n            </select>\n            <button style={{padding: \"5px\", border: \"1 solid black\"}}>Submit Edit</button>\n        </form>\n\n        <form className=\"editingRoutineActivityForm\"  \n            onSubmit={handleEditRoutineActivitySubmit}\n            style={{display: isEditingRA? 'block' : 'none', textAlign: \"center\"}}>\n            <p>Routine Activity Update:<span>{nameOfRoutineActivityEdit}</span></p>\n            <label>Duration</label>\n            <input type=\"number\" name=\"editDuration\" value={ editRoutineActivityDuration}\n                min=\"0\" onChange={(event) => {setEditRoutineActivityDuration(event.target.value)}} />\n            <label>Count</label>\n            <input type=\"number\" name=\"editCount\" value={ editRoutineActivityCount }\n                min=\"0\" onChange={(event) => {setEditRoutineActivityCount(event.target.value)}} />\n            <button style={{padding: \"5px\"}}>Submit Edit</button><span className=\"close\"\n                onClick={() => setIsEditingRA(false)}>X CLOSE</span>\n        </form>\n        </div>\n        </>\n    )\n};\n\nexport default MyRoutines;","import React from 'react';\nimport {useParams} from 'react-router-dom';\n\nexport default (props) => {\n  const { username } = useParams();\n  const  { routinesList } = props\n  const filteredUser = routinesList.filter(routine => username === routine.creatorName && routine.isPublic);\n\n  return <>\n    <div style={{display: \"flex\", alignItems: \"center\", flexDirection: \"column\"}}>\n    <h1 style={{paddingTop: \"5px\"}}>User</h1>\n    <h2>Public Routines by: {username} </h2> \n      <div className=\"singleUserSection\" style={{display: \"flex\", justifyContent: \"center\", flexWrap: \"wrap\"}}>\n        { filteredUser && filteredUser.length > 0 &&  filteredUser.map((userRoutine) => \n            <div key={userRoutine.id} style={{border: \"3px solid rgb(133, 148, 161)\",\n                  borderRadius: \"5px\", width: \"250px\", padding: \"10px\"}}>\n                <section>\n                <h3>{username}'s Routine: {userRoutine.name}</h3>\n                <p><b>Goal:</b>{userRoutine.goal}</p>\n                </section> \n                { userRoutine.activities ? \n                  <>\n                  <section className=\"actList\">\n                    <p>Activities:</p>\n                    {userRoutine.activities.map((activity) => \n                      <div key={activity.routineActivityId} className=\"eachActivity\">\n                      <p>Name: {activity.name}</p>\n                      <p>Description: {activity.description}</p>\n                      <p>Duration: {activity.duration}</p>\n                      <p>Count: {activity.count}</p>\n                      </div>\n                    )}\n                  </section>\n                  </>\n                  : ''\n                }      \n            </div>\n          ) \n        }\n      </div>\n    </div>  \n  </>\n};","import React, {useEffect, useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch,\n    NavLink,\n    Redirect\n  } from 'react-router-dom';\n\nimport { getRoutines,\n         getActivities } from './api';\n\nimport { getCurrentUser,\n         getCurrentToken } from './auth';\n\nimport {\n    Header,\n    Routines,\n    Activities,\n    Loading,\n    MyRoutines,\n    SingleUser,\n    Footer\n  } from './components';\n\nconst App = () => {\n    const [routinesList, setRoutines] = useState([])\n    const [activitiesList, setActivities] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [token, setToken] = useState(getCurrentToken())\n    const [currentUsername, setCurrentUsername] = useState(getCurrentUser());\n    const [ usernameRoutineList, setUsernameRoutineList] = useState([])\n    const [ hadAChange, setHadAChange] = useState(false)\n\n    useEffect(() => {\n        setLoading(true)\n        getRoutines()\n            .then(routines => {\n                setRoutines(routines)\n            })\n            .catch(error => {\n                console.error(error)\n            });\n             \n        getActivities()\n            .then(activities => {\n                setActivities(activities)\n            })\n            .catch(error => {\n                console.error(error)\n            })\n            .finally(() => { setLoading(false) })\n    }, []);\n  \n    useEffect(() => {\n       getRoutines()\n           .then(routines => {\n               setRoutines(routines)\n           })\n           .catch(error => {\n               console.error(error)\n           });\n    }, [hadAChange]);\n\n    return (\n        <div id=\"mainDiv\">\n            <Header token={token} setToken={setToken} currentUsername={currentUsername} setCurrentUsername={setCurrentUsername} />\n            <NavLink to=\"/\" className=\"nav\" style={{textDecoration: \"none\", padding: \"7px\", borderRadius: \"5px\"}}>Home</NavLink>\n            <NavLink to=\"/routines\" style={{textDecoration: \"none\", padding: \"7px\", borderRadius: \"5px\"}} activeClassName=\"current\">Routines</NavLink>\n            { token ? <NavLink to=\"/my-routines\" style={{textDecoration: \"none\", padding: \"7px\", borderRadius: \"5px\"}}\n                activeClassName=\"current\">My Routines</NavLink>\n                : '' }\n            <NavLink to=\"/activities\" style={{textDecoration: \"none\", padding: \"7px\", borderRadius: \"5px\"}}\n                activeClassName=\"current\">Activities</NavLink>\n            <Switch>\n                { token ? \n                <Route path=\"/my-routines\"><MyRoutines currentUsername={currentUsername}\n                    token={token} routinesList={routinesList} setRoutines={setRoutines}\n                    usernameRoutineList={usernameRoutineList} setUsernameRoutineList={setUsernameRoutineList} \n                    activitiesList={activitiesList}\n                    hadAChange={hadAChange} setHadAChange={setHadAChange}\n                    /> \n                </Route>  \n                : ''    \n                }\n            <Route exact path=\"/routines\"> <Routines routinesList={routinesList} /> </Route> \n            <Route exact path=\"/activities\">          \n            <Activities activitiesList={activitiesList} setActivities={setActivities} token={token}/>\n            </Route> \n                { loading ? <Loading /> : null }\n            <Route path=\"/users/:username/routines\"> < SingleUser routinesList={routinesList} /> </Route>\n            <Route exact path=\"/\">\n                <>    \n                    <h2 style={{ padding: \".5em\"}}>{token ? `Welcome ${currentUsername}!` : `Please log in.`}</h2>\n                    <img src=\"/fitness-tracker.png\" className=\"banner\" alt=\"fitness tracker banner\"/>\n                    <h2>Fitness Tracker</h2>\n                    <p>Track your work out routines for free here on Fitness Tracker. Register for an account and start \n                    logging your routines and activities immediately. Stay healthy for longevity.</p>\n                </>\n            </Route>\n            <Redirect to=\"/\" />\n            </Switch>   \n            <Footer />\n        </div>\n    )\n};\n\nReactDOM.render(\n    <Router>   \n    <App/>\n    </Router> ,\n    document.getElementById('root')\n)"],"sourceRoot":""}